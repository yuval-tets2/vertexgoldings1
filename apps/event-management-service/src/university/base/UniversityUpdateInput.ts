/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CourseUpdateManyWithoutUniversitiesInput } from "./CourseUpdateManyWithoutUniversitiesInput";
import { ValidateNested, IsOptional, IsString, IsInt } from "class-validator";
import { Type } from "class-transformer";
import { DepartmentUpdateManyWithoutUniversitiesInput } from "./DepartmentUpdateManyWithoutUniversitiesInput";
import { EmployeeUpdateManyWithoutUniversitiesInput } from "./EmployeeUpdateManyWithoutUniversitiesInput";
import { StudentUpdateManyWithoutUniversitiesInput } from "./StudentUpdateManyWithoutUniversitiesInput";

@InputType()
class UniversityUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CourseUpdateManyWithoutUniversitiesInput,
  })
  @ValidateNested()
  @Type(() => CourseUpdateManyWithoutUniversitiesInput)
  @IsOptional()
  @Field(() => CourseUpdateManyWithoutUniversitiesInput, {
    nullable: true,
  })
  courses?: CourseUpdateManyWithoutUniversitiesInput;

  @ApiProperty({
    required: false,
    type: () => DepartmentUpdateManyWithoutUniversitiesInput,
  })
  @ValidateNested()
  @Type(() => DepartmentUpdateManyWithoutUniversitiesInput)
  @IsOptional()
  @Field(() => DepartmentUpdateManyWithoutUniversitiesInput, {
    nullable: true,
  })
  department?: DepartmentUpdateManyWithoutUniversitiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutUniversitiesInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutUniversitiesInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutUniversitiesInput, {
    nullable: true,
  })
  employee?: EmployeeUpdateManyWithoutUniversitiesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  established?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => StudentUpdateManyWithoutUniversitiesInput,
  })
  @ValidateNested()
  @Type(() => StudentUpdateManyWithoutUniversitiesInput)
  @IsOptional()
  @Field(() => StudentUpdateManyWithoutUniversitiesInput, {
    nullable: true,
  })
  students?: StudentUpdateManyWithoutUniversitiesInput;
}

export { UniversityUpdateInput as UniversityUpdateInput };
