/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { AdmissionForm } from "../../admissionForm/base/AdmissionForm";
import { EnumStudentGender } from "./EnumStudentGender";
import { MarkSheet } from "../../markSheet/base/MarkSheet";
import { University } from "../../university/base/University";

@ObjectType()
class Student {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  admissionDate!: Date;

  @ApiProperty({
    required: false,
    type: () => [AdmissionForm],
  })
  @ValidateNested()
  @Type(() => AdmissionForm)
  @IsOptional()
  admissionForm?: Array<AdmissionForm>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  dateOfBirth!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  firstName!: string;

  @ApiProperty({
    required: true,
    enum: EnumStudentGender,
  })
  @IsEnum(EnumStudentGender)
  @Field(() => EnumStudentGender, {
    nullable: true,
  })
  gender?: "MALE" | "FEMALE" | "OTHER";

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastName!: string;

  @ApiProperty({
    required: false,
    type: () => [MarkSheet],
  })
  @ValidateNested()
  @Type(() => MarkSheet)
  @IsOptional()
  markSheet?: Array<MarkSheet>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone!: string | null;

  @ApiProperty({
    required: true,
    type: () => University,
  })
  @ValidateNested()
  @Type(() => University)
  university?: University;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Student as Student };
