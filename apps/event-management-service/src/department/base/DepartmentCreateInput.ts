/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CourseCreateNestedManyWithoutDepartmentsInput } from "./CourseCreateNestedManyWithoutDepartmentsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { EmployeeCreateNestedManyWithoutDepartmentsInput } from "./EmployeeCreateNestedManyWithoutDepartmentsInput";
import { FacultyCreateNestedManyWithoutDepartmentsInput } from "./FacultyCreateNestedManyWithoutDepartmentsInput";
import { UniversityWhereUniqueInput } from "../../university/base/UniversityWhereUniqueInput";

@InputType()
class DepartmentCreateInput {
  @ApiProperty({
    required: false,
    type: () => CourseCreateNestedManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => CourseCreateNestedManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => CourseCreateNestedManyWithoutDepartmentsInput, {
    nullable: true,
  })
  courses?: CourseCreateNestedManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeCreateNestedManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeCreateNestedManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => EmployeeCreateNestedManyWithoutDepartmentsInput, {
    nullable: true,
  })
  employee?: EmployeeCreateNestedManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => FacultyCreateNestedManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => FacultyCreateNestedManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => FacultyCreateNestedManyWithoutDepartmentsInput, {
    nullable: true,
  })
  faculty?: FacultyCreateNestedManyWithoutDepartmentsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: () => UniversityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UniversityWhereUniqueInput)
  @Field(() => UniversityWhereUniqueInput)
  university!: UniversityWhereUniqueInput;
}

export { DepartmentCreateInput as DepartmentCreateInput };
