/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CourseUpdateManyWithoutDepartmentsInput } from "./CourseUpdateManyWithoutDepartmentsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { EmployeeUpdateManyWithoutDepartmentsInput } from "./EmployeeUpdateManyWithoutDepartmentsInput";
import { FacultyUpdateManyWithoutDepartmentsInput } from "./FacultyUpdateManyWithoutDepartmentsInput";
import { UniversityWhereUniqueInput } from "../../university/base/UniversityWhereUniqueInput";

@InputType()
class DepartmentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CourseUpdateManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => CourseUpdateManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => CourseUpdateManyWithoutDepartmentsInput, {
    nullable: true,
  })
  courses?: CourseUpdateManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => EmployeeUpdateManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => EmployeeUpdateManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => EmployeeUpdateManyWithoutDepartmentsInput, {
    nullable: true,
  })
  employee?: EmployeeUpdateManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: () => FacultyUpdateManyWithoutDepartmentsInput,
  })
  @ValidateNested()
  @Type(() => FacultyUpdateManyWithoutDepartmentsInput)
  @IsOptional()
  @Field(() => FacultyUpdateManyWithoutDepartmentsInput, {
    nullable: true,
  })
  faculty?: FacultyUpdateManyWithoutDepartmentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => UniversityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UniversityWhereUniqueInput)
  @IsOptional()
  @Field(() => UniversityWhereUniqueInput, {
    nullable: true,
  })
  university?: UniversityWhereUniqueInput;
}

export { DepartmentUpdateInput as DepartmentUpdateInput };
