/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdmissionBatchCreateNestedManyWithoutCoursesInput } from "./AdmissionBatchCreateNestedManyWithoutCoursesInput";
import { ValidateNested, IsOptional, IsInt, IsString } from "class-validator";
import { Type } from "class-transformer";
import { AdmissionCriterionCreateNestedManyWithoutCoursesInput } from "./AdmissionCriterionCreateNestedManyWithoutCoursesInput";
import { AdmissionFormCreateNestedManyWithoutCoursesInput } from "./AdmissionFormCreateNestedManyWithoutCoursesInput";
import { DepartmentWhereUniqueInput } from "../../department/base/DepartmentWhereUniqueInput";
import { FacultyWhereUniqueInput } from "../../faculty/base/FacultyWhereUniqueInput";
import { MarkSheetCreateNestedManyWithoutCoursesInput } from "./MarkSheetCreateNestedManyWithoutCoursesInput";
import { UniversityWhereUniqueInput } from "../../university/base/UniversityWhereUniqueInput";

@InputType()
class CourseCreateInput {
  @ApiProperty({
    required: true,
    type: () => AdmissionBatchCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => AdmissionBatchCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => AdmissionBatchCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  admissionBatches?: AdmissionBatchCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: () => AdmissionCriterionCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => AdmissionCriterionCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => AdmissionCriterionCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  admissionCriteria?: AdmissionCriterionCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: false,
    type: () => AdmissionFormCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => AdmissionFormCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => AdmissionFormCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  admissionForm?: AdmissionFormCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  credits!: number;

  @ApiProperty({
    required: true,
    type: () => DepartmentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DepartmentWhereUniqueInput)
  @Field(() => DepartmentWhereUniqueInput)
  department!: DepartmentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => FacultyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FacultyWhereUniqueInput)
  @IsOptional()
  @Field(() => FacultyWhereUniqueInput, {
    nullable: true,
  })
  faculty?: FacultyWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => MarkSheetCreateNestedManyWithoutCoursesInput,
  })
  @ValidateNested()
  @Type(() => MarkSheetCreateNestedManyWithoutCoursesInput)
  @IsOptional()
  @Field(() => MarkSheetCreateNestedManyWithoutCoursesInput, {
    nullable: true,
  })
  markSheet?: MarkSheetCreateNestedManyWithoutCoursesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: () => UniversityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UniversityWhereUniqueInput)
  @Field(() => UniversityWhereUniqueInput)
  university!: UniversityWhereUniqueInput;
}

export { CourseCreateInput as CourseCreateInput };
